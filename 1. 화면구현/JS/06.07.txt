6/12 - 1교시 / 데이터베이스

자바스크립트
HTML - 뼈대
CSS - 스타일
JS - 기능

1. 실습방법 안내
- 브라우저 - console(콘솔) 
- Shift + 엔터 -> 줄 개행

자바스크립트 기초 문법
1. 자바스크립트 사용하는 방법
- HTML 문서에서 사용하는 방법
- script 태그 정의된 자바스크립코드 해석
1) script 태그 안에 정의하는 방식
2) HTML 태그의 이벤트 처리기 속성
3) 외부 스크립트 파일로 사용하는 방법
	script
		src= "스크립트 파일 경로"

		- 확장자 .js

2. 자바스크립트 주석 처리
	- 자바스크립트 엔진이 해석 X
	1) 설명
	2) 실행 배제
	
	- 한줄 주석: // 한줄
	- 여러줄 주석: /* 여러줄 설명 ... */

	참고) Ctrl + R 새로고침

3. 변수
1) 정의
	- 값을 담을 수 이름이 있는 공간
	- 바구니
	- 변하는 값을 담을 수 이름이 있는 공간

2) 변수선언
	- 공간의 이름을 정하는 것
	- 
3) 선언자 종류

	var 변수명; // 변수 선언 - 값을 담을 수 있는 공간
	변수명 = 값;
	참고)
	; -> 문장 종료

4) 선언 방법
	- 변수 선언 후 최초로 값을 저장: 초기화
	var num;
	num = 10;

	- 선언과 동시에 초기화
		예) var num = 10;

	- 변수 여러개를 선언하는 방법
		var 변수명1, 변수명2, 변수명3;
		var 변수명1 = 값, 변수명2 = 값 ....;

	참고)
		console
			.log(값, ....); // 한 번에 변수 값 찾을 수 있음.

		컴퓨터(Computer): 계산기(연산)
		
5) 변수 선언 생략
6) 변수 끌어올림과 변수 중복 선언
- 변수 중복 선언 시 기존 값이 변경


7) 변수의 명명규칙
1) 알파벳(대소문자), 숫자, 특수문자(_, $)
	- 한글도 사용 가능 - 권장 X
2) 숫자는 변수명 앞에 올 수 없다.
3) 예약어는 쓸 수 없다.
	(return, if, for .... throw....)

4) 변수명은 의미있는 단어작성


1) - var num1
2) - var 1st  ----- X
3) - var_abc
4) - var &dollar;

변수명을 짖는 관례
var numberOfOrder: 카멜 표기법

	- number Of Order

	- 단어의 첫 문자는 대문자, 다만 시작 단어는 소문자

	- 

8) 변수에 저장할 수 있는 자료형
자료형: 값의 형태, 형식

- 문자형(string): "또는 '로 값을 감싸면 문자형
	var str = 'ABC';
	var str = "ABC";

- 숫자형(number):
	- 정수(소수점이 없는 수 - 양수(1,10), 음수(-1, -10), 0) 
	- 실수(소수점이 있는 수 - 3.123, 0.0)

- 논리형(boolean)
	- 참, 거짓
	- true (참)
	- false (거짓)

	- 제어문에서, 반목문에서 자주 활용
	
- null: 값이 없는 상태(값)

- undefined: 값이 정해지지 않은 상태

참고)
	자료형을 체크하는 연산자 - typeof
	

4. 연산자
	10 + 20

	1) 항: 연산에 사용되는 값 (10, 20)
		- 단항
		- 이항
		- 삼항

	2) 연산자: 연산에 사용되는 기호 (+)
		예) +



		1) 산술 연산자
			- 더하기(+), 빼기(-), 곱하기(*), 나누기(/), 나머지 (%)

			- 나머지(%): 균등 배분(나머지가 나누는 수보다 작은 수가 반복해서 나온다.)
		
			- 문자형의 + 연산자 : 수치 연산 X, 문자를 결합
			var str1 = "abc";
			var str2 = str1 + "def";
			- 문자 + 숫자 -> 문자
			var num1 = '100';
			var num2 = num1 + 100; // 100100


			10 + 2 * 6

			- *, /, %의 연산의 우선 순위가 +, -보다 크다.
			- (....): 연선자의 우선순위 강제 적용
		
		2) 대입 연산자
			- =
			- 오른쪽에 있는 값을 왼쪽 변수에 저장
			- var num = 10; // 10을 num에 저장한다.
			- 연산의 우선 순위가 가장 낮은 연산자

		3) 증가감소 연산자
			- 단항 연산
			- 1씩 증가, 1씩 감소
			- ++
			- --

			num++; // num = num + 1;
			++num; // num = num + 1;

			num--; // num = num - 1;
			--num; // num = num - 1;
	
		4) 복합 대입 연산자
			산술 연선 + 대입
			(+, -, *, /, %) + =

			num = num + 2; // num += 2;
			num = num * 2; // num *= 2;
		
		5) 부호 연산자
			(+, -)
			- : 부호 반전 (음수 -> 양수, 양수 -> 음수)
				(* - 1)

		6) 비교 연산자
			- 크다(>), 크거나 같다(>=), 작다(<, )작거나 같다(<=)
			- 같다(==), 다르다(!=), 같다(=== - 자료형까지 비교), 다르다(!== - 자료형까지 비교)
			- 연산의 결과 값이 논리형 값 (참 - true, 거짓 - false)


			같다 비교
			- 동일성 비교 (===): 값 + 자료형 / 주소가 같은 값
			- 동등성 비교 (==): 값만 비교		
	
		7) 논리 연산자
			- OR 연산자 (합집합): ||
				true || false -> true
				false || true -> true
				true || true -> true
				false || false -> false
		
			- AND 연산자 (교집합): &&
				true && true -> true
				false && true -> false
				true && false -> false
				false && false -> false

			- NOT 연산자(부정 - 참 -> 거짓, 거짓 -> 참): !

			- 연산의 결과: 논리형 값(true, false)

			- 비교 연산자와 함께 쓰이는 경우가 많다

			예) num가 10 이상이고 100이하인 수 인가?

			- 연산자의 우선순위: 비교 연산자 > 논리 연산자
			- 값을 가지고 참, 거짓 판단 - 연산의 결과는 현재 연산중인 값
				- false로 인식하는 값
					0, ""(빈 값), null, undefined
				
				- true로 인식하는 값: false로 인식하는 값 이외의 값

			- 단락회로평가
				- 결과가 이미 결정된 경우는 연산을 중단

			- || : 기본 값을 지정 많이 활용
				var num;
				num = num || 10; // 기본값이 10

			- && : 간단한 조건식 대체
				
5. 제어문
6. 선택문
7. 반복문





















