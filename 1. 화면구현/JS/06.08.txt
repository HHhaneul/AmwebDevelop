자바스크립트 기초
4. 연산자
	항: 연산에 사용된 값
	연산자: 연산에 사용되는 기호

	1) 산술 연산자 (+, -, *, /, %)
		(...): 우선순위 강제 적용

	2) 대입 연산자 (=)
		var num = 10;
		var num = 10 + 20 * 3;
			- 우선순위가 가장 낮은 연산자

	3) 증가 감소 연산자
		++
		--

		num++; // num = num + 1
		++num; // num = num + 1

	4) 부호 연산자
		(+, -)
		- : 부호 반전 / 음수 -> 양수, 양수 -> 음수
			(* - 1)

	5) 복합 대입 연산자
		다른 연산자 + 대입 연산자(=)
		산술연산자 + 대입 연산자

		num = num + 2; // num += 2;
		num = num * 2; // num *= 2;
	
	6) 비교 연산자
		>, >=, <, <=, ==: 같다, !=: 다르다.

		- 연산의 결과: 논리형 값 (true, false)
			- 제어문, 반복문

		- 동일성 (===, !==)
		- 동등성 (==, !=)
	7) 논리 연산자
		OR 연산자: ||
			하나라도 참이면 참
			ture || false -> true
			false || true -> true

		AND 연산자: &&
			모두 참일 때 참인 조건
			true && true -> true
			true && false -> false
			false && true -> false

		NOT 연산자 (부정 연산): !
		true -> !true -> false
		참 -> 거짓
		거짓 -> 참

		- 논리 연산자는 비교 연산자보다 우선순위가 낮다.
		- 단락 회로 평가
			- 이 결과가 결정된 경우는 연산 중단
		- false, true를 값으로 결정
			- false로 인식하는 값
				0, ""(빈 값), null, undefined
			- true로 인식하는 값
				- false로 인식하는 값 이외의 값은 전부 true
					"	"
		- 연산의 결과 마지막 연산 결과 값
		- ||: 기본값
		- &&: 간단한 조건식 대체

	8) 삼항 조건 연산자

		조건식 ? 참일 때 : 거짓일 때;
		(1항)      (2항)        (3항)


		조건식 - 연산의 결과가 참 거짓인 연산식 / 비교 또는 논리 연산자

	9) 연산자의 우선 순위
		=  ....    논리 < 비교 < ....	(....)

5. 제어문
1) 조건문 - 조건식

	if (조건식) {
		// 조건식이 참일 때 실행되는 코드
	} else {
		// 조건식이 참이 아닐 때 실행되는 코드
	}


	if (조건식1) {
		// 조건식1이 참일 때 수행되는 코드
	} else if (조건식2) {
		// 조건식1 - 거짓, 조건식2 - 참일 때 수행되는 코드
	} else if (조건식3) {
		// 조건식1, 조건식2 - 거짓, 조건식3 - 참일 때 수행되는 코드 
	}
	.... {
		// 모든 조건식이 거짓일 때 수행되는 코드
	}

6. 선택문
	- 값의 일치 여부 실행 구간 나누는 구문
	- switch ~ case 구문

	var 변수 = 값;
	switch (변수) {
		case 값1: 
			코드
			...
			break;
		case 값2: 
			코드
			...
			break;
		...
		default:
		// 마지막으로 수행되는 코드
	}
		
7. 반복문
	while(조건식){
		// 조건식이 참일 때 수행되는 코드

	}
------------------------------------------------------------
	do {
		// 조건식이 참일 때 수행되는 코드
		// 조건식이 거짓이더라도 한 번은 수행되는 코드
	
	} while (조건식);


	특정 횟수만큼 반복 하기 위한 필수 요소
	1) 초기값 (var num = 1)
	2) 조건식 - 특정 횟수 이하 (num <= 100)
	3) 증가식 - 조건식을 멈취기 위한 수단 (num++)

	for (초기화식; 조건식; 증감식) {
			
	}

	횟수: 순서(index)
	관례: i: 초기화식 변수
		중첩 for, 변수면 i, j, k, l, ....

	반복 중단: break;
	반복 건너뛰기: continue; // 현재 반복을 중단하고 새로운 반복 시작

	홀수 1, 3, 5, 7, 9 .... : 2n + 1 : 2로 나누었을 때 나머지가 1인 수
	짝수 2, 4, 6 ,8, 10 .... : 2n - 2로 나눌 수 있는 수
	% 2 -> 나머지가 없으면 짝수, 나머지가 있으면 홀수

	중첩 반복문
		: 반복문안에 반복문이 포함된 구조
		while + while
		while + for
		for + while
		for + for

		구구단
		2~9
			- 각 곱하는 수 1 ~ 9

ECMAScript 6 부터 추가된 데이터 타입
2015 (ES6+, EX6Next)
1) 통일성: 표준안
2) 신기술: 매년 스펙 추가

1. 심벌 (Symbol)
	- 유일 무이한 값: 중복X
	- 내장 함수, 변수

1) 심벌의 생성
	Symbol()

2) 심벌과 문자열 연결하기
	Symbol
		.for("키워드");

2. 템플릿 리터럴
	- 문자열: 편의 기능
	- 입력한 그대로 문장을 입력
		`문장`

	참고) 메타 문자
		\n: 줄 개행
		\t: 탭키 1번
		\b: 백스페이스 키 1번

3. 보간 표현식
	- 변수 - 문자열내에 포함해서 같이 출력











