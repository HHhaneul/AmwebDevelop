JSP의 특징
(Java Servlet Page) - 서블릿 코드 번역기술

1. JSP는 서블릿 기술의 확장
2. JSP는 유지 관리가 용이
3. JSP는 빠른 개발이 가능
4. JSP로 개발하면 코드 길이를 줄일 수 있다.

JSP의 페이지 처리과정
hello.jsp -> 번역 -> hello_jsp.java -> hello_jsp.class


servlet-api
servlet.jsp-api
    - 3.0



JSP 생명 주기
    _jspinit(): 초기화 시(처음만 호출)
    _jspService(....): 매 요청 시
    _jspDestroy(): 소멸 시


    참고)
        _jspService 메서드 지역 내부에 정의된 객체 -> 내장 객체
        -> jsp 페이지에서 바로 접근이 가능

            HttpServletRequest request: 요청관련 정보, 기능
            HttpServletResponse response: 응답관련 정보, 기능

            PageContext pageContext: JSP로 번역된 서블릿 클래스의 환경 정보, 기능
            ServletContext application: 서블릿(애플리케이션) 환경정보, 기능
            HttpSession session: 세션
            JspWriter out: JSP페이지에 출력
            Object page = this // 생성된 서블릿 객체를 참조

        jsp 페이지에서 자바코드: 번역 시 자바 코드 그 자체로 추가
        <%
            자바코드        
        %>

스크립트 태그
    - 자바 코드를 입력할 수 있는 태그

1. 스크립트 태그의 종류
1) 선언문
    - 번역 위치가 클래스명 바로 아래쪽 추가(멤버 변수, 메서드)
    <%!
        자바코드...
    %>

2) 스크림틀릿
    _jspService 메서드의 지역 내에 코드 추가 (메서드 정의 X, 변수 -> 지역변수)
    <%
        자바코드...
    %>

3) 표현문(expression)
    _jspService 메서드의 지역 내에 번역

    <%=변수%> = out.print(변수)


디렉티브 태그
<%@ .... %>
- page

    errorPage -> 에러 출력 페이지 설정
    isErrorPage = "true": 번역될 때 exception 내장 객체 생성
    isELIgnored = "true": EL식 사용 불가 x 
                            (Expression Language)
                            $(식)

- include

- taglib

1. page 디렉티브 태그의 기능과 사용법
2. include 디렉티브 태그의 기능과 사용법
    file="jsp|HTML 경로"
    <%@ include file = "..." %>

3. taglib  디렉티브 태그의 기능과 사용법
    - 태그 라이브러리
    JSTL (JSP Standard Tag Library) - 3.0
    url="jakarta.tags.core"

    - JSTL 3.0

        - jstl-api
        - jstl 구현체

JSP의 주석 처리
<%--주석--%>: 번역 x

/* */: 자바 코드의 주석으로 번역

