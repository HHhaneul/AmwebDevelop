JSTL
1. 설치하기 
jstl api
jstl 구현체

    <dependency>
      <groupId>jakarta.servlet.jsp.jstl</groupId>
      <artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
      <version>3.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.web</groupId>
      <artifactId>jakarta.servlet.jsp.jstl</artifactId>
      <version>3.0.1</version>
    </dependency>

core 라이브러리: 제어구문, 반복문 ...
fmt 라이브러리: 형식화, 숫자형식, 날짜형식, 시간대, 다국어
functions 라이브러리: 문자열 가공...
sql 라이브러리 X

https://jakarta.ee/specifications/tags/3.0/tagdocs/

URI

2. 코어(core) 라이브러리
	uri="jakarta.tags.core"
		참고)
			javaee 9 -> JSTL 1.2
			uri="https://java.sun.com/jsp/jstl/core"

1) <c:set>
	- EL식 속성으로 추가 / EL식 변수로 사용 가능
	- var: 변수명
	- value: 값 / 기본형 값, 문자열, EL 변수, <%=값%>
	- scope: page(기본값 - pageContext)
			 request
			 session
			 application

2) <c:remove>
	- EL식 속성 제거
	- var="속성명"
	- 모든 속성 범위에서 삭제
	scope: 제거될 속성의 범위 설정

3) <c:if>
	- 조건문
	- test: EL 식 - 참, 거짓
			true, false: 상수로 사용 가능

	참고)
		else X

4) <c:choose>
	<c:choose>
		<c:when test="조건식">
			...
		</c:when>
		<c:otherwise>
			모든 조건이 거짓일 때
		</c:otherwise>
	</c:choose>

5) <c:forEach>
	- 반복문
	- 횟수
		begin: 반복 시작 번호
		end: 반복 종료 번호
		var: 변수명 - 반복 번호
		step: 증감 단위 - 기본값 1

	- 배열, 컬렉션(Collection - List, Set), Iterator, Enumeration
		- items: EL변수
		- var: 현재 요소
		- varStatus:
			- index: 반복 순서(0부터 시작하는 순서)
			- count: 반복 순서(1부터 시작하는 순서)
			- current: 현재 반복 아이템
			- first: 처음 반복인지
			- last: 마지막 반복인지

	- 콤마(,) 문자열
		- items: EL변수, 문자열
		- var: 현재 요소

	- <c:forEach>액션의 items 애트리뷰트를 이용해서 처리할 수 있는 데이터
	
6) <c:forTokens>
	- java.util.StringTokenizer
	- items: 문자열
	- delims: 구분 문자
	- var: 분리된 문자가 담길 EL변수

7) <c:catch>
	- 자바 코드 없이 태그 방식으로 예외 처리
	- var: 예외가 발생하면 생성될 예외객체 변수명
		- 예외가 없으면 null

8) <c:redirect>
	- url: 주소
	- <c:param name="" value="" />: 쿼리스트링
	참고)
		HttpServletResponse
			sendRedirect(url);
			: 응답 헤더 -> Location: 주소

9) <c:import>
	- 동일서버 자원 + 외부서버 자원
	- url="버퍼에 포함될 자원 경로"
	- 요청 데이터를 url에 설정된 경로에 전송
	- <c:param name="" value="" />

	참고)
		<jsp:include ... /> 동작이 비슷
			- 버퍼에 추가 가능한 자원: 동일 서버의 자원만 가능
				jsp, text, html, 서블릿 출력 결과물

10) <c:url>
	- contextPath: 서버 배포 환경에 따라서 변경될 수 있는 URL
		예) /day04
	- var: 변수명: 변환된 주소값을 EL변수로 담아준다.
	- <c:param ...> 쿼리스트링값을 추가

	-HttpServletRequest
		- String getContextPath()

11) <c:out> 
	- 데이터 출력
	- HTML 태그 -> 엔티티문자: 태그가 해석되지 않는 문자열로 변환해서 출력
		-> HTML 해석 허용: escapeXml="false"
	- value: "태그 값"
	- default: "기본값": value에 값이 null이거나 비어있는 경우

3. 포매팅(fmt) 라이브러리
	uri="jakarta.tags.fmt" // JSTL 3.0
	prefix="fmt"


	JSTL 1.2
		uri="http://java.sun.com/jsp/jstl/fmt"

1) fmt:formatDate 
	: java.util.Date
	: java.text.SimpleDateFormat

	- date객체 -> 형식화

	- value: date객체
	- type - date: 날짜, time: 시간, both
	- dateStyle: full|long|short
	- timeStyle: full|long|short
	- pattern: 직접 패턴을 입력 형식화

2) fmt:formatNumber
3) fmt:setLocale
4) fmt:timeZone과 fmt:setTimeZone
5) fmt:setBundle과 fmt:bundle
6) fmt:requestEncoding

4. 함수(functions) 라이브러리
	uri="jakarta.tags.functions"