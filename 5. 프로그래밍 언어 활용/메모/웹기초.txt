웹 기초
1. 요청과 응답 이해하기
	요청(request) :  브라우저(클라이언트)
	응답(response) : 서버(server)
	
	참고)
		serve

	요청 전문 
		헤더(header) 
			- 요청 URL 
			- 요청 방식(method) - GET, POST 	
			- 요청 정보(언어, 브라우저 종류 등등..)
			- 쿠키...
			- 요청 IP
			
		바디(body)
			요청 전송 데이터(POST...)
			
		
	응답 전문
		헤더(header)
			- 응답 상태코드 
				2xx :
						200 : 정상 응답 (요청 -> 서버 -> 응답)
						201 : 작성됨(CREATED) 
						202 : ACCEPT
				3xx 
						301(영구이동), 302(임시이동) : 페이지 이동 
						304 : 캐시됨  / 캐시 - 임시 저장 메모리
							
				4xx : 클라이언트 오류 
						400(Bad Request - 잘못된 요청)
						401(UnAuthorized - 접근 권한없이)
						403(Forbidden - 금지됨)
						404(Not Found - 페이지 없음)
						405(Method Not Allowed)
				
				5xx : 서버쪽 오류 
						500(Internal Server Error - 코드 오류)
						501
						503 : Service Unavailable : 서비스를 사용할 수 없음
				
			- 응답 바디 데이터에 대한 종류 
			- content-type: text/html;
			                    application/json;
			- 서버 종류
			- 브라우저가 할 행동에 대한 명령
			- Location: 주소 -> 브라우저가 주소 이동 
			- Set-Cookie : 키=값; 키=값;
			- Refresh : 초 : 새로고침
			
		바디(body)
			- 응답 출력 데이터 
			
2. HTTP ( HyperText Transfer Protocol)
	HTML 
	
	참고)
		FTP
		
3. 헤더(header)
4. HTTP 상태 코드(응답 코드)

5. HTTP 요청 메서드
	GET : 자원의 조회
		
		
		요청 URL : https://news.naver.com/main/list.naver
		?
		mode=LPOD
		&
		mid=sec
		&
		sid1=001
		&
		sid2=140
		&
		oid=001
		&
		isYeonhapFlash=Y
		&
		aid=0014076458
			
		질의(query)
		
		쿼리스트링
		
		- 요청 헤더 O, 요청 BODY X 
		
		
		참고)
			DELETE
		
	POST : 작성(서버에 기록)
	
		요청 헤더 : content-type: application/x-www-form-urlencoded; // 일반 기본 양식 형식 
										application/json; 
										
		
		요청 데이터 : 바디 
			subject=%EC%A0%9C%EB%AA%A9....&content=%EB%82%B4%EC%9A%A9....%0D%0A...

			
			참고) 
				content-type: application/json; 
				{ 이름: 값, 이름: 값 ... }
		
		참고)
			PUT : 데이터 전체 치환
			PATCH : 데이터 부분 치환 
		
	OPTIONS : 요청을 하기 전에 통신 옵션을 설명하는 
	
